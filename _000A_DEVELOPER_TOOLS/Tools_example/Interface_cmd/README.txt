Версия - 3.8.5 (tags/v3.8.5:580fbb0, Jul 20 2020, 15:43:08) [MSC v.1926 32 bit (Intel)]

Установка интерпретатора:
python-3.8.5.exe (при установке обязательно поставить флажок add PATCH)

Файл зависимостей - requirement.txt

Зависимости на 26.08.2020 года:
certifi==2020.6.20
cycler==0.10.0
kiwisolver==1.2.0
matplotlib==3.3.1
numpy==1.19.1
pandas==1.1.1
Pillow==7.2.0
pyparsing==2.4.7
python-dateutil==2.8.1
pytz==2020.1
scipy==1.5.2
seaborn==0.10.1
six==1.15.0

В РАЗРАБОТКЕ:

Для продолжения работы из CMD запускать:
- virtual.bat (или просто virtual)::запуск из виртуальной среды;
- preview.bat:: обзор БД:), файл tests.py;
- adhaesio.bat (или просто adhaesio)::путь файла adhaesio.py;
- control_production.bat (или просто control_production)::путь файла control_production.py(w);
- production.bat (или просто production)::путь файла production;
- project_develop.bat (или просто production)::путь файла project_develop.py;
- consumer.bat (или просто consumer)::путь файла consumer.py;
- people.bat (или просто people)::путь файла people.py;
- results.bat (или просто results)::путь файла results.py
В случае необходимости создания файлов формата .bat:
- help_command_bat.txt.

ЗАДАЧА 0: РЕФАКТОРИИНГ КОДА!!!ПРЕДВАРИТЕЛЬНЫЙ ПЛАН ДЕЙСТВИЙ!!!!

ЗАДАЧА 00А: Используя принципы ООП (Объектно-ориентированного программирования):
	- Наследование;
	- Инкапсуляция;
	- Полиморфизм.

ДЛЯ ПО:

Разработать модули с абстрактынми классами для установления договоренности при создании классов:
- graphics.py; # ВЫПОЛНЕНО на 30.08.2020
- statistics.py; # ВЫПОЛНЕНО на 31.08.2020
- calculate.py. # ВЫПОЛНЕНО на 1.09.2020

ДЛЯ ПОКАЗАТЕЛЯ АДГЕЗИЯ:

1 Подзагрузка файлов формата .csv в файл __init__ расположенный в каталоге DATA_CSV - инкапсуляция переменных. # ВЫПОЛНЕНО

2 Определить визуальный ряд необходимых графиков:
- Линейный график средствами библиотеки matplotlib;
- Диаграмма плотности ("ящик с усами") средствами seaborn;
- Гистограмма распределения средствами seaborn;
- Точечные графики характеризующую кореляционную зависимость - cobfidence_ellipse.py:
	+ https://matplotlib.org/gallery/statistics/confidence_ellipse.html#sphx-glr-gallery-statistics-confidence-ellipse-py

3 Определить допустимую погрешность при измерении показателей характеризующих адгезию:
- Построить график погрешностей типа errorbar средствами matplotlib - Errorbar_graphics.py:
	+ https://ru.stackoverflow.com/questions/720404/%D0%9A%D0%B0%D0%BA-%D1%80%D0%B8%D1%81%D0%BE%D0%B2%D0%B0%D1%82%D1%8C-%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%B8-%D1%81-%D0%BF%D0%BE%D0%B3%D1%80%D0%B5%D1%88%D0%BD%D0%BE%D1%81%D1%82%D1%8F%D0%BC%D0%B8-%D0%B2-python

4 Вывод возможных графиков в компановке с помощью subplots - оффициальная документация matplotlib;
	+ https://matplotlib.org/tutorials/intermediate/tight_layout_guide.html#sphx-glr-tutorials-intermediate-tight-layout-guide-py

ЗАДАЧА Б: ДЛЯ ОСТАЛЬНЫХ ПОКАЗАТЕЛЕЙ ОПРЕДЕЛИТЬ ВИДЫ ГРАФИКОВ!!!

ЗАДАЧА В: РАЗРАБОТАТЬ ОТДЕЛЬНЫЙ МОДУЛЬ С КЛАССАМИ ПОСТРОЕНИЯ РАЗЛИЧНЫХ ГРАФИКОВ ДЛЯ ДАННОГО ПО!!!

ЗАДАЧА Г: РЕФАКТОРИНГ КОДА!!!

ЗАДАЧА Д: ПРОДУМАТЬ ОБЩУЮ СТРУКТУРУ ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ!!!

ЗАДАЧА Е: ИСПОЛЬЗУЯ ПАТТЕРНЫ(ШАБЛОНЫ) ПРОЕКТИРОВАНИЯ РАЗРАБОТАТЬ СТРУКТУРУ КОДА ПРОГРАММЫ!!!

ЗАДАЧА Ё: ИНТЕРФЕЙС КОММАНДНОЙ СТРОКИ!!!

ЗАДАЧА Ж: ПОВТОРНЫЙ РЕФАКТОРИНГ КОДА!!!

ЗАДАЧА З: ГРАФИЧЕСКИЙ ИНТЕРФЕЙС!!!

ЗАДАЧА И: ПОВТОРНЫЙ РЕФАКТОРИНГ КОДА!!!

ЗАДАЧА Й: ПОДГОТОВКА ГОТОВОГО ПАКЕТА, ПРЕДПОЛОЖИТЕЛЬНО, В ФОРМАТЕ .whl.

