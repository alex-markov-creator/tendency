Версия - Python 3.8.5 on win32
Файл зависимостей - requirement.txt

Зависимости на 26.08.2020 года:
certifi==2020.6.20
cycler==0.10.0
kiwisolver==1.2.0
matplotlib==3.3.1
numpy==1.19.1
pandas==1.1.1
Pillow==7.2.0
pyparsing==2.4.7
python-dateutil==2.8.1
pytz==2020.1
scipy==1.5.2
seaborn==0.10.1
six==1.15.0

Установка интерпретатора:
python-3.8.5.exe (при установке обязательно поставить флажок add PATCH)

Для продолжения работы из CMD запускать:
- virtual.bat (или просто virtual)::запуск из виртуальной среды;
- adhaesio.bat (или просто adhaesio)::путь файла adhaesio.py;
- control_production.bat (или просто control_production)::путь файла control_production.py(w);
- production.bat (или просто production)::путь файла production;
- project_develop.bat (или просто production)::путь файла project_develop.py;
- consumer.bat (или просто consumer)::путь файла consumer.py;
- people.bat (или просто people)::путь файла people.py;
- results.bat (или просто results)::путь файла linear.py(w).
В случае необходимости составления файлов формата .bat:
- help_command_bat.txt.

ЗАДАЧА 0: РЕФАКТОРИИНГ КОДА!!!ПРЕДВАРИТЕЛЬНЫЙ ПЛАН ДЕЙСТВИЙ!!!!

ЗАДАЧА 00А: Используя принципы ООП (Объектно-ориентированного программирования):
	- Наследование;
	- Инкапсуляция;
	- Полиморфизм.

ДЛЯ ПО:

Разработать модули с абстрактынми классами для установления договоренности при создании классов:
- graphics.py; # ВЫПОЛНЕНО на 30.08.2020
- statistics.py; # ВЫПОЛНЕНО на 31.08.2020
- calculate.py. # ВЫПОЛНЕНО

ДЛЯ ПОКАЗАТЕЛЯ АДГЕЗИЯ:

1 Подзагрузка файлов формата .csv в файл __init__ расположенный в каталоге DATA_CSV - инкапсуляция переменных.

2 Определить визуальный ряд необходимых графиков:
- Линейный график средствами библиотеки matplotlib;
- Диаграмма плотности ("ящик с усами") средствами seaborn;
- Гистограмма распределения средствами seaborn;
- Точечные графики характеризующую кореляционную зависимость - cobfidence_ellipse.py:
	+ https://matplotlib.org/gallery/statistics/confidence_ellipse.html#sphx-glr-gallery-statistics-confidence-ellipse-py

3 Определить допустимую погрешность при измерении показателей характеризующих адгезию:
- Построить график погрешностей типа errorbar средствами matplotlib - Errorbar_graphics.py:
	+ https://ru.stackoverflow.com/questions/720404/%D0%9A%D0%B0%D0%BA-%D1%80%D0%B8%D1%81%D0%BE%D0%B2%D0%B0%D1%82%D1%8C-%D0%B3%D1%80%D0%B0%D1%84%D0%B8%D0%BA%D0%B8-%D1%81-%D0%BF%D0%BE%D0%B3%D1%80%D0%B5%D1%88%D0%BD%D0%BE%D1%81%D1%82%D1%8F%D0%BC%D0%B8-%D0%B2-python

4 Вывод возможных графиков в компановке с помощью subplots - оффициальная документация matplotlib;
	+ https://matplotlib.org/tutorials/intermediate/tight_layout_guide.html#sphx-glr-tutorials-intermediate-tight-layout-guide-py

5 Построение графиков организовать в отдельном модуле graphics.py:

.-
  - DATA_CSV
    __init__.py
    -...csv;
    - ...
  - adhaesio.py
  - graphics
    - __init__.py
    - graphics.py

,где . - корневой каталог.

ЗАДАЧА Б: ДЛЯ ОСТАЛЬНЫХ ПОКАЗАТЕЛЕЙ ОПРЕДЕЛИТЬ ВИДЫ ГРАФИКОВ!!!

ЗАДАЧА В: РАЗРАБОТАТЬ ОТДЕЛЬНЫЙ МОДУЛЬ С КЛАССАМИ ПОСТРОЕНИЯ РАЗЛИЧНЫХ ГРАФИКОВ ДЛЯ ДАННОГО ПО!!!

ЗАДАЧА Г: РЕФАКТОРИНГ КОДА!!!

ЗАДАЧА Д: ПРОДУМАТЬ ОБЩУЮ СТРУКТУРУ ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ!!!

ЗАДАЧА Е: ИСПОЛЬЗУЯ ПАТТЕРНЫ(ШАБЛОНЫ) ПРОЕКТИРОВАНИЯ РАЗРАБОТАТЬ СТРУКТУРУ КОДА ПРОГРАММЫ!!!

ЗАДАЧА Ё: ИНТЕРФЕЙС КОММАНДНОЙ СТРОКИ!!!

ЗАДАЧА Ж: ПОВТОРНЫЙ РЕФАКТОРИНГ КОДА!!!

ЗАДАЧА З: ГРАФИЧЕСКИЙ ИНТЕРФЕЙС!!!

ЗАДАЧА И: ПОВТОРНЫЙ РЕФАКТОРИНГ КОДА!!!

ЗАДАЧА Й: ПОДГОТОВКА ГОТОВОГО ПАКЕТА, ПРЕДПОЛОЖИТЕЛЬНО, В ФОРМАТЕ .whl.

28.08.2020:
РЕАШАЕМАЯ ЗАДАЧА 0
- Предварительный план действий, расстановка приорететов решаемых задач.
РАЗРАБОТАНЫ .bat файлы для быстрого доступа к файлам процессов
(смотри README!!!)
РАЗРАБОТАНА ПРЕДВАРИТЕЛЬНАЯ СТРУКТУРА ФАЙЛОВ И КАТАЛОГОВ:
-.
-- env
    -\Scripts\activate.bat # АКТИВАЦИЯ ВИРТУАЛЬНОЙ СРЕДЫ С ИСПОЛЬЗУЕМЫМИ ПАКЕТАМИ
    -\Scripts\deactivate.bat # ДЕАКТИВАЦИЯ ВИРТУАЛЬНОЙ СРЕДЫ
    - ...
-- DATA
    - __init__.py
    - Показатели csv годовые
	- ...
    - Показатели csv полугодовые
	- ...
-- DATA_adhaesio
    - __init__.py
    - ...csv
-- Indicators_Process_B(7.2)
    - __init__.py
    - Graphics
	- ...
    - cunsumer.py
    - ...
-- Indicators_Process_B(7.3)
    - __init__.py
    - Graphics
	- ...
    - project_and_develop.py
    - ...
-- Indicators_Process_B(7.4)_and_O(8.2)
    - __init__.py
    - Graphics
	- ...
    - control_production.py
    - ...
-- Indicators_Process_B(7.5)
    - __init__.py
    - Graphics
	- ...
    - production.py
    - ...
-- Indicators_Process_B(7.7)_and_B(7.5)
    - __init__.py
    - Graphics
	- ...
    - results.py
    - ...
-- Indicators_Process_O(6.2)
    - __init__.py
    - Graphics
	- ...
    - people.py
    - ...
-- main.py
-- python-3.8.5.exe
-- README.txt
-- requirement.txt
-- virtual.bat
СОЗДАН ФАЙЛ read.py ДЛЯ ПРОСМОТРА СТРУКТУРЫ В КОНСОЛИ.

ПОДЗАДАЧА: - РАЗРАБОТКА УНИВЕРСАЛЬНОГО МОДУЛЯ graphics.py в ООП стиле!!!;
- КОРРЕКТИРОВКА СТРУКТУРЫ.

30.08.2020
УНИВЕРСАЛЬНЫЙ МОДУЛЬ graphics.py разработан...
РАСПОЛОЖЕНИЕ:
    - Graphics
	- __init__.py
	- graphics.py
ОТКОРРЕКТИРОВАНА ОБЩАЯ СТРУКТУРА ПО С ДОБАВЛЕНИЕМ ДАННЫХ ДИРРЕКТОРИЙ.
План действий: разработка модуля statistics.py для вывода статистических данных

31.08.2020
НЕБОЛЬШОЙ РЕФАКТОРИНГ СТРУКТУРЫ ПО.
УНИВЕРСАЛЬНЫЙ МОДУЛЬ statistics.py разработан...
План действий: разработка модуля calculate.py для подсчёта и объединения различных значений в объекты типа DataFrame
УНИВЕРСАЛЬНЫЙ МОДУЛЬ calculate.py разработан...
НЕБОЛЬШОЙ РЕФАКТОРИНГ СТРУКТУРЫ ПО.
Определен способ сохранения директории родительского, родительского каталога в sys.path
для импорта модулей graphics,statistics,calculate...из корневого каталога ПО.
РАЗРАБОТКА ФАЙЛА С ИЗОБРАЖЕНИЕМ СТРУКТУРЫ КАТАЛОГОВ в формате .png.

01.09.2020
КОРРЕКТИРОВКА СТРУКТУРЫ КАТАЛОГОВ ПО.
План действий: разработка файла __init__ в дирректории Data для подзагрузки .csv
файлов, чтения, преобразования к типу pandas.DataFrame и присвоение объектам данного
типа имен переменных. Данный вариант выбран для возможности подзагрузки в данный файл
других форматов БД(баз данных) в дальнейшей работе с данным ПО.
??????????????? - проблемы с импортом из файла __init__.py - решить при возможности
СОЗДАН ФАЙЛ С ИЗОБРАЖЕНИЕМ СТРУКТУРЫ КАТАЛОГОВ v.0.0.1(Alfa version) - Structure.png

02.09.2020
Проблема с импортом решена, необходимо указывать ../.. действует только для данной структуры.
Необходима нормальная БД с объектами типа DataFrame с подзагрузкой в файле __init__.py.
Или реализация паттерна MVC для доступа к объектам базы.
ПРИСВОЕНИЕ ПЕРЕМЕННЫМ ОБЪЕКТОВ ТИПА pandas.DataFrame в файле __init__.py - временное решение!!!
Остановился на процессе "Связь с потребителем".
Далее присвоение переменным объектов с кол-вом выпущенной и реализованной продукции для
разработки модуля results.py.
План действий: разработка модуля results.py.

03.09.2020
Работа над подзагрузкой DataFrame объектов в файле __init__.py ../Data.
Продолжается работа над results.py.
План действий: Реализация модуля correlation.py

04.09.2020
Использовать метод перегрузки операторов __call__ при разработке классов вывода информации из БД:).
Продолжается работа над подзагрузкой DataFrame объектов из БД.
План действий: Реализация файла __init__.py и модуля indicators.py для просмотра значений переменных в БД.
При разработке использовать модуль prettytable для вывода табличных данных наименований показателей, а также
предусмотреть возможность вывода определения каждого показателя.

07.09.2020
Реализован файл __init__.py для подзагрузки БД:). Созданы файлы tests.py и data_for_tests.py для предварительного просмотра и тестирования содержимого файлов формата csv.

08.09.2020
РЕШАЕМАЯ ЗАДАЧА 0
Продолжается работа над results.py.

11.09.2020
Продолжается работа над results.py.
План действий: Реализация модуля correlation.py с выводом в отдельный .xlsx файл результатов расчётов коэффициентов корреляции для всех возможных показателей.

15.09.2020
Продолжается работа над results.py.
Разработан универсальный интрфейс командной строки с помощью механизма
интроспекции и Python.
План действий: инициализация pandas.DataFrame объектов в файле __init__.py
для подзагрузки файлов формата .csv со значениями адгезии.
Определить формат данных (форматирование excel файла) по адгезии для перевода в .csv.

23.09.2020
Модуль results.py с логированием и выводом в файлы графиков и данных реализован.
Indicators_Process_B(7.7)_and_B(7.5) # Выполнено
План действий: инициализация pandas.DataFrame объектов в файле __init__.py
для подзагрузки файлов формата .csv со значениями адгезии.
Определить формат данных (форматирование excel файла) по адгезии для перевода в .csv.

25.09.2020
Разработан конвертер формата .csv в .xlsx, модули добавлены в каталог Tools
Откорректирован файл зависимостей:

Зависимости на 25.09.2020 года:
certifi==2020.6.20
cycler==0.10.0
kiwisolver==1.2.0
matplotlib==3.3.1
numpy==1.19.1
pandas==1.1.1
Pillow==7.2.0
prettytable==0.7.2
pyparsing==2.4.7
python-dateutil==2.8.1
pytz==2020.1
scipy==1.5.2
seaborn==0.10.1
six==1.15.0
XlsxWriter==1.3.6
xlrd==1.2.0

30.09.2020
Разработка файла __init__ для подзагрузки файлов формата .xlsx со значениями адгезии, отформатированных для построения запланированных графиков. ВРЕМЕННОЕ РЕШЕНИЕ!

01.10.2020
Разработка модуля adhaesio.py.

12.10.2020
Работы приостановлены, отсутствие мотивации)

21.10.2020
Продолжение разработки модуля adhaesio.py
План действий: доработка интерфейса командной строки

27.10.2020
Модуль adhaesio.py готов
План действий: рефакторинг данного модуля,
разработка модуля control_production.py

05.11.2020
Разработка модуля control_production.py

09.11.2020
Доработка интерфейса командной строки control_production.py
План действий: рефакторинг данного модуля,
разработка модуля people.py

10.11.2020
Модуль control_production.py готов.
Разработка модуля people.py
План действий: рефакторинг данного модуля,
разработка модуля production.py

11.11.2020
Модуль people.py готов.
Разработка модуля production.py

12.11.2020
Модуль production.py готов.
Разработка модуля project_and_develop.py

13.11.2020
Модуль  project_and_develop.py готов.
Разработка модуля consumer.py

14.11.2020
Модуль  consumer.py готов.
План действий: рефакторинг, изменение структуры в случае необходимости,
ошибки при импортировании модулей в корневой каталог приложения, необходимо исправить.

12.01.2021
В файл Data/__init__.py добавлена информация по ленте ЛИТКОР-НН толщиной 1.0мм.
Отредактирован файл adhaesio.py с реализацией данной функциональности.
Сформированы файлы по значениям адгезии за 2020 год.
Не получилось сформировать данные за квартал, раньше основных.



